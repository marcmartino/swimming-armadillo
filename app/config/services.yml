# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    token_storage_session:
        class: OAuth\Common\Storage\Session

    api_adapter_factory:
        class: AppBundle\ApiAdapter\ProviderApiAdapterFactory
        arguments: ["@service_container", "@doctrine.orm.entity_manager"]

    oauth.curl_client:
        class: OAuth\Common\Http\Client\CurlClient

    oauth.service_factory:
        class: OAuth\ServiceFactory
        calls:
          - [setHttpClient, ["@oauth.curl_client"]]
          - [registerService, ["FitBit", "AppBundle\\OAuth\\FitBit"]]
          - [registerService, ["WithingsOAuth", "AppBundle\\OAuth\\WithingsOAuth"]]

    oauth.fitbit_client:
        class: AppBundle\OAuth\Fitbit
        factory: [ "@oauth.service_factory", createService ]
        arguments:
            - "FitBit"
            - "@api_adapter.fitbit_credentials"
            - "@token_storage_session"

    api_adapter.fitbit_credentials:
        class: OAuth\Common\Consumer\Credentials
        arguments:
          - %fitbit_consumer_key%
          - %fitbit_consumer_secret%
          - %fitbit_callback_uri%

    api_adapter.fitbit:
        class: AppBundle\ApiAdapter\Provider\FitbitApiAdapter
        arguments:
          - "@oauth.fitbit_client"
          - "@security.context"
          - "@happy_stats.persistence"
          - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:ServiceProvider")
          - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:OAuthAccessToken")
          - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:MeasurementEvent")
          - "@api_parser.fitbit_food"
          - "@api_parser.fitbit_bodyfat"
          - "@api_parser.fitbit_weight"

    oauth.withings_client:
        class: AppBundle\OAuth\WithingsOAuth
        factory: [ "@oauth.service_factory", createService ]
        arguments:
            - "WithingsOAuth"
            - "@api_adapter.withings_credentials"
            - "@token_storage_session"

    api_adapter.withings_credentials:
        class: OAuth\Common\Consumer\Credentials
        arguments:
          - %withings_consumer_key%
          - %withings_consumer_secret%
          - %withings_callback_uri%

    api_adapter.withings:
        class: AppBundle\ApiAdapter\Provider\WithingsApiAdapter
        arguments:
          - "@oauth.withings_client"
          - "@security.context"
          - "@happy_stats.persistence"
          - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:ServiceProvider")
          - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:OAuthAccessToken")
          - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:MeasurementEvent")
          - "@api_parser.withings_body_measurement"

    user_data:
        class: AppBundle\UserData\UserData
        arguments:
          - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:Measurement")

    entity_provider:
        class: AppBundle\Entity\Provider
        arguments: ["@database_connection"]

    entity_measurement_type:
        class: AppBundle\Entity\MeasurementType
        arguments: ["@database_connection"]

    entity_unit_type:
        class: AppBundle\Entity\UnitType
        arguments: ["@database_connection"]

    entity.oauth_access_token:
        class: AppBundle\Entity\OAuthAccessToken
        arguments: ["@database_connection"]

    entity.measurement:
        class: AppBundle\Entity\Measurement
        arguments: ["@database_connection"]

    entity.measurement_event:
        class: AppBundle\Entity\MeasurementEvent
        arguments: ["@database_connection"]

    abtest:
        class: AppBundle\ABTest\ABTestService
        arguments: ["@insight"]

    insight:
        class: AppBundle\Insight\InsightService
        arguments: ["@insight.insight_factory"]

    insight.insight_factory:
        class: AppBundle\Insight\InsightFactory
        arguments: ["@database_connection"]

    correlator.simple_slope:
        class: AppBundle\Correlator\SimpleSlope

    correlator.pearson:
        class: AppBundle\Correlator\Pearson

    happy_stats.persistence:
        class: AppBundle\Persistence\EntityManagerPersistence
        arguments: [ "@doctrine.orm.default_entity_manager" ]

    # Api Parsers
    api_parser.abstract:
      abstract: true
      arguments:
        - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:UnitType")
        - @=service("doctrine.orm.default_entity_manager").getRepository("AppBundle:MeasurementType")
        - @happy_stats.persistence

    api_parser.fitbit_food:
      class: AppBundle\ApiParser\FitbitFood
      parent: api_parser.abstract

    api_parser.fitbit_bodyfat:
      class: AppBundle\ApiParser\FitbitBodyFat
      parent: api_parser.abstract

    api_parser.fitbit_weight:
      class: AppBundle\ApiParser\FitbitWeight
      parent: api_parser.abstract

    api_parser.withings_body_measurement:
      class: AppBundle\ApiParser\Withings\BodyMeasurement
      parent: api_parser.abstract

    # Event Listeners
    event.listener.registration_completed:
        class: AppBundle\EventListener\FOSUserBundleRegistrationCompleted
        arguments: ["@service_container", "@router"]
        tags:
            - { name: kernel.event_listener, event: fos_user.registration.completed, method: processEvent }

    event.listener.registration_initialized:
        class: AppBundle\EventListener\FOSUserBundleRegistrationInitialized
        arguments: ["@doctrine.orm.entity_manager", "@happystats.mailchimp", '%mailchimp.user_list_id%']
        tags:
            - { name: kernel.event_listener, event: fos_user.registration.initialize, method: processEvent }

    happystats_user.login_listener:
        class: 'AppBundle\EventListener\LoginConsumeApis'
        arguments: ['@doctrine.orm.entity_manager', '@api_adapter_factory', '@security.context', '@logger']
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login', method: processEvent }

    # Form
    happystats_user.registration.form.type:
        class: AppBundle\Form\Type\RegistrationFormType
        arguments:
          - 'AppBundle\Entity\User'
        tags:
            - { name: form.type, alias: happystats_user_registration }

    # Mailchimp
    happystats.mailchimp:
        class: Mailchimp
        arguments: ['%mailchimp.api_key%']