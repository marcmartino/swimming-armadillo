# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    guzzle:
        class: GuzzleHttp\Client

    token_storage_session:
        class: OAuth\Common\Storage\Session

    api_adapter_factory:
        class: AppBundle\ApiAdapter\ProviderApiAdapterFactory
        arguments: ["@service_container"]

    user_data:
        class: AppBundle\UserData\UserData
        arguments: ["@database_connection", "@entity_measurement_type"]

    entity_provider:
        class: AppBundle\Entity\Provider
        arguments: ["@database_connection"]

    entity_measurement_type:
        class: AppBundle\Entity\MeasurementType
        arguments: ["@database_connection"]

    entity_unit_type:
        class: AppBundle\Entity\UnitType
        arguments: ["@database_connection"]

    entity.oauth_access_token:
        class: AppBundle\Entity\OAuthAccessToken
        arguments: ["@database_connection"]

    entity.measurement:
        class: AppBundle\Entity\Measurement
        arguments: ["@database_connection"]

    entity.measurement_event:
        class: AppBundle\Entity\MeasurementEvent
        arguments: ["@database_connection"]

    abtest:
        class: AppBundle\ABTest\ABTestService
        arguments: ["@insight"]

    insight:
        class: AppBundle\Insight\InsightService
        arguments: ["@insight.insight_factory"]

    insight.insight_factory:
        class: AppBundle\Insight\InsightFactory
        arguments: ["@database_connection"]

    correlator.simple_slope:
        class: AppBundle\Correlator\SimpleSlope


    # Event Listeners
    kernel.listener.your_listener_name:
        class: AppBundle\EventListener\FOSUserBundleRegistrationCompleted
        arguments: ["@service_container", "@router"]
        tags:
            - { name: kernel.event_listener, event: fos_user.registration.completed, method: processEvent }